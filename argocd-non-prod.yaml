environment: non-prod
argocd_app_of_apps:


# Global configuration for all applications
# defaults and constants
# default cluster and namespace here is the argocd cluster and namespace


  global:
    namespace: cd
    defaultCluster: https://kubernetes.default.svc
    syncPolicy:
      automated:
        prune: false
        selfHeal: true


  privateGitRepositories:
  # app of apps
    - name: argocd-config
      url: git@github.com:polarpoint-io/argocd-app-of-apps.git
  # tooling applications
    - name: argocd-tooling-applications 
      url: "git@github.com:polarpoint-io/argocd-tooling-applications.git"
  # foundational applications
    - name: argocd-foundational-applications 
      url: "git@github.com:polarpoint-io/argocd-foundational-applications.git"
  # argo workflow libraries
    - name: argo-workflows-library
      url: "git@github.com:polarpoint-io/argow-template-library.git"

  publicHelmRepositories:
  # public helm repositories that don't need credentials
    - name: argocd-bitnami-repo
      url: "https://charts.bitnami.com/bitnami"
    - name: argocd-argo-repo
      url: https://argoproj.github.io/argo-helm
    - name: argocd-crossplane-repo
      url: "https://charts.crossplane.io/stable"
    - name: argocd-dependency-track-repo
      url: "https://evryfs.github.io/helm-charts/"
    - name: backstage-repo
      url:  "https://polarpoint-io.github.io/charts"
    - name: sonarqube-repo
      url: https://SonarSource.github.io/helm-chart-sonarqube
    - name: jenkins
      url: https://charts.jenkins.io

  privateCredentialsTemplates:
  # private helm repositories that don't need credentials
    - name: harbor
      url: "https://registry.polarpoint.io"

  privateHelmRepositories:
    - name: harbor
      url: "https://registry.polarpoint.io"
    - name: harbor-oci
      url: "registry.polarpoint.io/chart"

  clusters:
  - name: deploy
    url: https://kubernetes.default.svc
    controller: true
    labels:
      role: controller
      env: non-prod
  - name: tooling
    url: "https://192.168.11.80:6443"
    labels:
      role: worker
      env: non-prod
  - name: observability
    url: "https://192.168.11.70:6443"
    labels:
      role: worker
      env: non-prod
  # root application argocd-app-of-apps
  projects:
      - name: argocd-config
        urls:
        - name: argocd-config
          url: 'git@github.com:polarpoint-io/argocd-app-of-apps.git'
          path: ./
        permissions:
            admin:
              description: "Admin Access"
              groups:
                - ARGOCD-CONFIG-ADMIN
            rw:
              description: "Read-Write Access"
              groups:
                - ARGOCD-CONFIG-RW
            ro:
              description: "Read-Only Access"
              groups:
                - ARGOCD-CONFIG-RO
            namespace: argocd
        destinations:
        - name: default
          namespace: '*'
          server: https://kubernetes.default.svc

        applications: []
        # - name: argocd-config
        #   url: 'git@github.com:polarpoint-io/argocd-app-of-apps.git'
        #   path: ./
        #   targetRevision: main
        #   valuesFiles:
        #   - "values-non-prod.yaml"
        #   - "values-argocd.yaml"

        # ApplicationSet generator to apply
        # applications and services to all clusters
        # foundational, security and observational services
      - name: foundational
        urls:
        - name: argocd-foundational-applications 
          url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
        - name: argocd-sysdig-falco-repo
          url: "https://falcosecurity.github.io/charts"
        permissions:
            admin:
              description: "Admin Access"
              groups:
                - FOUNDATIONAL-ADMIN
            rw:
              description: "Read-Write Access"
              groups:
                - FOUNDATIONAL-RW
            ro:
              description: "Read-Only Access"
              groups:
                - FOUNDATIONAL-RO
        destinations:
        - name: deploy
          namespace: '*'
          server: https://kubernetes.default.svc
        applicationSets:
          destinations:
          - name: deploy
            namespace: '*'
            server: https://kubernetes.default.svc
            labels:
              role: controller
              env: non-prod
          - name: tooling
            namespace: '*'
            url: "https://192.168.11.80:6443"
            labels:
              role: worker
              env: non-prod
          - name: observability
            namespace: '*'
            url: "https://192.168.11.70:6443"
            labels:
              role: worker
              env: non-prod
          applications:
          - name: prometheus
            url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
            path: releases/apps/observability/kube-prometheus-stack
            targetRevision: HEAD
            namespace: observability
            valuesFile: "values.yaml"
          - name: certmanager
            url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
            path: releases/apps/foundational/cert-manager
            targetRevision: HEAD
            namespace: foundational
            valuesFile: "values.yaml"
          - name: kuberhealthy
            url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
            path: releases/apps/observability/kuberhealthy
            targetRevision: HEAD
            namespace: observability
            valuesFile: "values.yaml"
          - name: linkerd
            url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
            path: releases/apps/foundational/linkerd
            targetRevision: HEAD
            namespace: foundational
            valuesFile: "values.yaml"
          - name: falco
            url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
            path: releases/apps/security/sysdig-falco
            targetRevision: HEAD
            namespace: security
            valuesFile: "values.yaml"

    # applications and services
      - name: deploy
        urls:
        - name: argocd-deploy-applications
          url: 'git@github.com:polarpoint-io/argocd-deploy-applications.git'
        - name: argocd-crossplane-repo
          url: "https://charts.crossplane.io/stable"
        - name: argocd-dependency-track-repo
          url: "https://evryfs.github.io/helm-charts/"
        - name: backstage-repo
          url:  "https://polarpoint-io.github.io/charts"
        - name: argocd-argo-repo
          url: https://argoproj.github.io/argo-helm
        permissions:
            admin:
              description: "Admin Access"
              groups:
                - DEPLOY-ADMIN
            rw:
              description: "Read-Write Access"
              groups:
                - DEPLOY-RW
            ro:
              description: "Read-Only Access"
              groups:
                - DEPLOY-RO
        destinations:
        - name: default
          namespace: '*'
          server: https://kubernetes.default.svc

        applications:
        - name: deploy-argocd-applications
          url: 'git@github.com:polarpoint-io/argocd-deploy-applications.git'
          path: releases
          targetRevision: main
          valuesFile: "values.yaml"
    
      - name: tooling
        urls:
        - name: argocd-tooling-applications
          url: 'git@github.com:polarpoint-io/argocd-tooling-applications.git'
        - name: sonarqube-repo
          url: https://SonarSource.github.io/helm-chart-sonarqube
        - name: jenkins
          url: https://charts.jenkins.io
        - name: argo-workflows-library
          url: 'git@github.com:polarpoint-io/argow-template-library.git'
        permissions:
            admin:
              description: "Admin Access"
              groups:
                - TOOLING-ADMIN
            rw:
              description: "Read-Write Access"
              groups:
                - TOOLING-RW
            ro:
              description: "Read-Only Access"
              groups:
                - TOOLING-RO
        destinations:
        - name: tooling
          namespace: '*'
          server: https://192.168.11.80:6443

        applications:
        - name: deploy-argocd-applications
          url: 'git@github.com:polarpoint-io/argocd-deploy-applications.git'
          path: releases
          targetRevision: main
          valuesFile: "values.yaml"
        - name: tooling-argocd-applications
          url: 'git@github.com:polarpoint-io/argocd-tooling-applications.git'
          path: releases
          targetRevision: main
          valuesFile: "values.yaml"

  # argo workflows template library
        - name: argow-template-library
          url: 'git@github.com:polarpoint-io/argow-template-library.git'
          path: releases/apps/workflows
          targetRevision: main
          directory:
            recurseDirectory: false
    