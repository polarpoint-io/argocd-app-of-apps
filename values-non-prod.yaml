## argocd manages it's own resources
argocd_chart_revision: '5.23.2'
argocd:
  ## Argo Configs
  configs:
    params:
      server.insecure: true
    exec.enabled: true # web Terminal active
    knownHosts:
      data:
        # -- Known Hosts
        # default -- See [values.yaml]
        ssh_known_hosts: |
          bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
          github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
          github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
          github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
          gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
          gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
          gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
          ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
          vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H

  controller:
    metrics:
      enabled: true
      applicationLabels:
        enabled: true
      serviceMonitor:
        enabled: false
        namespace: observability

  redis:
    image:
      # -- Redis repository
      repository: redis

  repoServer:
    containerSecurityContext:
      runAsNonRoot: true
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      seccompProfile: null
      capabilities:
        drop:
          - ALL


environment: non-prod

# Global configuration for all applications
# defaults and constants
# default cluster and namespace here is the argocd cluster and namespace


global:
  namespace: cd
  defaultCluster: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: false
      selfHeal: true


privateGitRepositories:
# app of apps
  - name: argocd-config
    url: git@github.com:polarpoint-io/argocd-app-of-apps.git
# controller applications
  - name: argocd-controller-applications 
    url: "git@github.com:polarpoint-io/argocd-controller-applications.git"
# tooling applications
  - name: argocd-tooling-applications 
    url: "git@github.com:polarpoint-io/argocd-tooling-applications.git"
# foundational applications
  - name: argocd-foundational-applications 
    url: "git@github.com:polarpoint-io/argocd-foundational-applications.git"
# argo workflow libraries
  - name: argo-workflows-library
    url: "git@github.com:polarpoint-io/argow-template-library.git"

publicHelmRepositories:
# public helm repositories that don't need credentials
  - name: argocd-bitnami-repo
    url: "https://charts.bitnami.com/bitnami"
  - name: argocd-argo-repo
    url: https://argoproj.github.io/argo-helm
  - name: argocd-crossplane-repo
    url: "https://charts.crossplane.io/stable"
  - name: argocd-dependency-track-repo
    url: "https://evryfs.github.io/helm-charts/"
  - name: backstage-repo
    url:  "https://polarpoint-io.github.io/charts"
  - name: sonarqube-repo
    url: https://SonarSource.github.io/helm-chart-sonarqube
  - name: jenkins
    url: https://charts.jenkins.io

privateCredentialsTemplates:
# private helm repositories that don't need credentials
  - name: harbor
    url: "https://registry.polarpoint.io"

privateHelmRepositories:
  - name: harbor
    url: "https://registry.polarpoint.io"
  - name: harbor-oci
    url: "registry.polarpoint.io/chart"

clusters:
- name: controller
  url: https://kubernetes.default.svc
  controller: true
  labels:
    role: controller
    env: non-prod
- name: tooling
  url: "https://192.168.11.80:6443"
  labels:
    role: worker
    env: non-prod
- name: observability
  url: "https://192.168.11.70:6443"
  labels:
    role: worker
    env: non-prod
# root application argocd-app-of-apps
projects:
    - name: argocd-config
      urls:
      - name: argocd-config
        url: 'git@github.com:polarpoint-io/argocd-app-of-apps.git'
        path: ./
      - name: argocd-argo-repo
        url: https://argoproj.github.io/argo-helm
      permissions:
          admin:
            description: "Admin Access"
            groups:
              - ARGOCD-CONFIG-ADMIN
          rw:
            description: "Read-Write Access"
            groups:
              - ARGOCD-CONFIG-RW
          ro:
            description: "Read-Only Access"
            groups:
              - ARGOCD-CONFIG-RO
          namespace: cd
      destinations:
      - name: controller
        namespace: '*'
        server: https://kubernetes.default.svc

      applications: 
      - name: argocd-config
        url: 'git@github.com:polarpoint-io/argocd-app-of-apps.git'
        path: ./
        targetRevision: main
        valuesFiles:
        - "values-non-prod.yaml"

      # ApplicationSet generator to apply
      # applications and services to all clusters
      # foundational, security and observational services
    - name: foundational
      urls:
      - name: argocd-foundational-applications 
        url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
      - name: argocd-sysdig-falco-repo
        url: "https://falcosecurity.github.io/charts"
      permissions:
          admin:
            description: "Admin Access"
            groups:
              - FOUNDATIONAL-ADMIN
          rw:
            description: "Read-Write Access"
            groups:
              - FOUNDATIONAL-RW
          ro:
            description: "Read-Only Access"
            groups:
              - FOUNDATIONAL-RO
      destinations:
      - name: controller
        namespace: '*'
        server: https://kubernetes.default.svc
      - name: tooling
        namespace: '*'
        server: "https://192.168.11.80:6443"
      - name: observability
        namespace: '*'
        server: "https://192.168.11.70:6443"
      applicationSets:
        destinations:
        - name: controller
          namespace: '*'
          server: https://kubernetes.default.svc
          labels:
            role: controller
            env: non-prod
        - name: tooling
          namespace: '*'
          server: "https://192.168.11.80:6443"
          labels:
            role: worker
            env: non-prod
        - name: observability
          namespace: '*'
          server: "https://192.168.11.70:6443"
          labels:
            role: worker
            env: non-prod
        applications:
        - name: prometheus
          url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
          path: releases/apps/observability/kube-prometheus-stack
          targetRevision: main
          namespace: observability
          valuesFile: "values.yaml"
        - name: certmanager
          url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
          path: releases/apps/foundational/cert-manager
          targetRevision: main
          namespace: foundational
          valuesFile: "values.yaml"
        - name: kuberhealthy
          url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
          path: releases/apps/observability/kuberhealthy
          targetRevision: main
          namespace: observability
          valuesFile: "values.yaml"
        # - name: linkerd
        #   url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
        #   path: releases/apps/foundational/linkerd
        #   targetRevision: HEAD
        #   namespace: foundational
        #   valuesFile: "values.yaml"
        - name: falco
          url: 'git@github.com:polarpoint-io/argocd-foundational-applications.git'
          path: releases/apps/security/sysdig-falco
          targetRevision: main
          namespace: security
          valuesFile: "values.yaml"

  # applications and services
    - name: controller
      urls:
      - name: argocd-controller-applications
        url: 'git@github.com:polarpoint-io/argocd-controller-applications.git'
      - name: argocd-crossplane-repo
        url: "https://charts.crossplane.io/stable"
      - name: argocd-dependency-track-repo
        url: "https://evryfs.github.io/helm-charts/"
      - name: backstage-repo
        url:  "https://polarpoint-io.github.io/charts"
      - name: argocd-argo-repo
        url: https://argoproj.github.io/argo-helm
      permissions:
          admin:
            description: "Admin Access"
            groups:
              - CONTROLLER-ADMIN
          rw:
            description: "Read-Write Access"
            groups:
              - CONTROLLER-RW
          ro:
            description: "Read-Only Access"
            groups:
              - CONTROLLER-RO
      destinations:
      - name: default
        namespace: '*'
        server: https://kubernetes.default.svc

      applications:
      - name: controller-argocd-applications
        url: 'git@github.com:polarpoint-io/argocd-controller-applications.git'
        path: releases
        targetRevision: main
        valuesFile: "values.yaml"
  
    - name: tooling
      urls:
      - name: argocd-tooling-applications
        url: 'git@github.com:polarpoint-io/argocd-tooling-applications.git'
      - name: sonarqube-repo
        url: https://SonarSource.github.io/helm-chart-sonarqube
      - name: jenkins
        url: https://charts.jenkins.io
      - name: argo-workflows-library
        url: 'git@github.com:polarpoint-io/argow-template-library.git'
      permissions:
          admin:
            description: "Admin Access"
            groups:
              - TOOLING-ADMIN
          rw:
            description: "Read-Write Access"
            groups:
              - TOOLING-RW
          ro:
            description: "Read-Only Access"
            groups:
              - TOOLING-RO
      destinations:
      - name: controller
        namespace: '*'
        server: https://kubernetes.default.svc
      - name: tooling
        namespace: '*'
        server: https://192.168.11.80:6443

      applications:
      - name: tooling-argocd-applications
        url: 'git@github.com:polarpoint-io/argocd-tooling-applications.git'
        path: releases
        targetRevision: main
        valuesFile: "values.yaml"

# argo workflows template library
      - name: argow-template-library
        url: 'git@github.com:polarpoint-io/argow-template-library.git'
        path: releases/apps/workflows
        targetRevision: main
        directory:
          recurseDirectory: false
  